package org.itson.bdavanzadas.agenciafiscal_presentacion;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.itson.bdavanzadas.agenciafiscal_negocio.bos.BuscarTramitesBO;
import org.itson.bdavanzadas.agenciafiscal_negocio.bos.IBuscarTramitesBO;
import org.itson.bdavanzadas.agenciafiscal_negocio.dtos.ContribuyenteDTO;
import org.itson.bdavanzadas.agenciafiscal_negocio.dtos.LicenciaNuevaDTO;
import org.itson.bdavanzadas.agenciafiscal_negocio.dtos.PlacasNuevasDTO;
import org.itson.bdavanzadas.agenciafiscal_persistencia.excepciones.PersistenciaException;

/**
 *
 * @author Roberto García
 */
public class PanelHistorialSeleccion extends javax.swing.JPanel {

    FramePrincipal framePrincipal;
    ContribuyenteDTO contribuyenteDTO;

    /**
     * Creates new form PanelHistorialSeleccion
     */
    public PanelHistorialSeleccion(FramePrincipal framePrincipal) {
        this.framePrincipal = framePrincipal;
        initComponents();
        insertarTabla();
        // Obtener el modelo de selección de la tabla
        ListSelectionModel selectionModel = tblContribuyentes.getSelectionModel();
//
//// Configurar el modelo de selección para seleccionar solo una fila a la vez
//        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//
//// Configurar el modelo de selección para permitir selección de múltiples intervalos
//        tblContribuyentes.setColumnSelectionAllowed(true);
//        tblContribuyentes.setRowSelectionAllowed(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTramites = new javax.swing.JButton();
        btnConsultas = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        btnContribuyentes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblContribuyentes = new javax.swing.JTable();
        bntSeleccionar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        lblFondo = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1000, 580));
        setMinimumSize(new java.awt.Dimension(1000, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTramites.setBorder(null);
        btnTramites.setBorderPainted(false);
        btnTramites.setContentAreaFilled(false);
        btnTramites.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTramites.setOpaque(false);
        btnTramites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTramitesActionPerformed(evt);
            }
        });
        add(btnTramites, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 261, 186, 47));

        btnConsultas.setBorder(null);
        btnConsultas.setBorderPainted(false);
        btnConsultas.setContentAreaFilled(false);
        btnConsultas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultas.setOpaque(false);
        btnConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultasActionPerformed(evt);
            }
        });
        add(btnConsultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 308, 186, 47));

        btnReportes.setBorder(null);
        btnReportes.setBorderPainted(false);
        btnReportes.setContentAreaFilled(false);
        btnReportes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportes.setOpaque(false);
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 355, 186, 47));

        btnContribuyentes.setBorder(null);
        btnContribuyentes.setBorderPainted(false);
        btnContribuyentes.setContentAreaFilled(false);
        btnContribuyentes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnContribuyentes.setOpaque(false);
        btnContribuyentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContribuyentesActionPerformed(evt);
            }
        });
        add(btnContribuyentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 402, 186, 47));

        jScrollPane1.setBackground(new java.awt.Color(250, 248, 245));
        jScrollPane1.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N

        tblContribuyentes.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        tblContribuyentes.setForeground(new java.awt.Color(0, 0, 0));
        tblContribuyentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RFC", "Nombre", "Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblContribuyentes.setToolTipText("");
        tblContribuyentes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tblContribuyentes.setRowHeight(25);
        tblContribuyentes.setRowMargin(1);
        tblContribuyentes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblContribuyentes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblContribuyentes.setShowGrid(true);
        tblContribuyentes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblContribuyentes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 244, 590, 240));

        bntSeleccionar.setBorder(null);
        bntSeleccionar.setBorderPainted(false);
        bntSeleccionar.setContentAreaFilled(false);
        bntSeleccionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bntSeleccionar.setOpaque(false);
        bntSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSeleccionarActionPerformed(evt);
            }
        });
        add(bntSeleccionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 500, 137, 40));

        btnRegresar.setBorder(null);
        btnRegresar.setBorderPainted(false);
        btnRegresar.setContentAreaFilled(false);
        btnRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegresar.setOpaque(false);
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 500, 137, 40));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/panelHistorialSeleccion.png"))); // NOI18N
        add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void bntSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSeleccionarActionPerformed
        int indice = tblContribuyentes.getSelectedRow();
        try {
            contribuyenteDTO = framePrincipal.getContribuyenteDTOs().get(indice);

            IBuscarTramitesBO buscarTramitesBO = new BuscarTramitesBO();
            List<LicenciaNuevaDTO> licenciasDTO = buscarTramitesBO.buscarLicencias(contribuyenteDTO);
            List<PlacasNuevasDTO> placasDTO = buscarTramitesBO.buscarPlacas(contribuyenteDTO);
            if (licenciasDTO.isEmpty()
                    && placasDTO.isEmpty()) {
                throw new PersistenciaException("El contribuyente no tiene ningún trámite asociado");
            }
            framePrincipal.setContribuyenteDTO(contribuyenteDTO);
            framePrincipal.setLicenciasDTOs(licenciasDTO);
            framePrincipal.setPlacasDTOs(placasDTO);
            framePrincipal.cambiarPanelHistorialLicencias();
        } catch (IndexOutOfBoundsException e) {
            framePrincipal.mostrarAviso("Selecciona un contribuyente de la lista");
        } catch (PersistenciaException e) {
            framePrincipal.mostrarAviso(e.getMessage());

        }
    }//GEN-LAST:event_bntSeleccionarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        switch (framePrincipal.getPanelAnterior()) {
            case 1 ->
                framePrincipal.cambiarPanelHistorialRfc();
            case 2 ->
                framePrincipal.cambiarPanelHistorialNombre();
            case 3 ->
                framePrincipal.cambiarPanelHistorialFecha();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnTramitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTramitesActionPerformed
        if (framePrincipal.mostrarConfirmacion("Perderás el progreso del trámite actual", "¿Deseas cambiar de módulo?")) {
            framePrincipal.setContribuyenteDTOs(null);
            framePrincipal.setPanelAnterior(null);
            framePrincipal.cambiarPanelTramites();
        }
    }//GEN-LAST:event_btnTramitesActionPerformed

    private void btnConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultasActionPerformed
        if (framePrincipal.mostrarConfirmacion("Perderás el progreso del trámite actual", "¿Deseas regresar?")) {
            framePrincipal.setContribuyenteDTOs(null);
            framePrincipal.setPanelAnterior(null);
            framePrincipal.cambiarPanelHistorialTipoBusqueda();
        }
    }//GEN-LAST:event_btnConsultasActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        if (framePrincipal.mostrarConfirmacion("Perderás el progreso del trámite actual", "¿Deseas cambiar de módulo?")) {
            framePrincipal.setContribuyenteDTOs(null);
            framePrincipal.setPanelAnterior(null);
            framePrincipal.cambiarPanelReportesBusqueda();
        }
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnContribuyentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContribuyentesActionPerformed
        if (framePrincipal.mostrarConfirmacion("Perderás el progreso del trámite actual", "¿Deseas cambiar de módulo?")) {
            framePrincipal.setContribuyenteDTOs(null);
            framePrincipal.setPanelAnterior(null);
            framePrincipal.cambiarPanelContribuyentes();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnContribuyentesActionPerformed

    private void insertarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tblContribuyentes.getModel();

        for (ContribuyenteDTO contribuyenteDTO1 : framePrincipal.getContribuyenteDTOs()) {

            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy");
            String fechaNacimiento = formatoFecha.format(contribuyenteDTO1.getFechaNacimiento());
            Object[] datosFila = {
                contribuyenteDTO1.getRfc(),
                contribuyenteDTO1.getNombre(),
                contribuyenteDTO1.getApellidoPaterno(),
                contribuyenteDTO1.getApellidoMaterno(),
                fechaNacimiento,
                contribuyenteDTO1.getTelefono()
            };
            modelo.addRow(datosFila);
        }
        // Dentro de tu método donde inicializas la tabla (por ejemplo, en el constructor de tu clase)
        JTableHeader cabecera = tblContribuyentes.getTableHeader();
        cabecera.setDefaultRenderer(new MultiLineHeaderRenderer());
        setTamañoTitulos();

    }

    private class MultiLineHeaderRenderer extends DefaultTableCellRenderer {

//        }
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            JLabel label = (JLabel) super.getTableCellRendererComponent(table, value,
                    isSelected, hasFocus, row, column);
            label.setHorizontalAlignment(SwingConstants.CENTER); // Centra el texto
            label.setVerticalAlignment(SwingConstants.NORTH);
            Color lightGray = new Color(248, 248, 248);
            label.setBackground(lightGray);
            label.setBorder(BorderFactory.createLineBorder(Color.GRAY));
//            label.setText("<html><center>" + value.toString().replaceAll("\\n", "<br>"));
            label.setText("<html><div style='text-align:center;'>" + value.toString().replace("\\n", "<br>") + "</html>");
            return label;
        }
    }

    private void setTamañoTitulos() {
        TableColumnModel columnModel = tblContribuyentes.getColumnModel();
        for (int i = 0; i < columnModel.getColumnCount(); i++) {
            TableColumn column = columnModel.getColumn(i);
            TableCellRenderer headerRenderer = column.getHeaderRenderer();
            if (headerRenderer == null) {
                headerRenderer = tblContribuyentes.getTableHeader().getDefaultRenderer();
            }
            Component headerComp = headerRenderer.getTableCellRendererComponent(tblContribuyentes, column.getHeaderValue(), false, false, 0, i);
            int headerHeight = headerComp.getPreferredSize().height;
            tblContribuyentes.getTableHeader().setPreferredSize(new Dimension(tblContribuyentes.getTableHeader().getPreferredSize().width, headerHeight * 2)); // Multiplica por 2 para asegurar que quepa todo el texto
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntSeleccionar;
    private javax.swing.JButton btnConsultas;
    private javax.swing.JButton btnContribuyentes;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton btnTramites;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JTable tblContribuyentes;
    // End of variables declaration//GEN-END:variables

}
